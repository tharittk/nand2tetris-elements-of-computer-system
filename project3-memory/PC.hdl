// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    
    //Construct 16-bit 0 and 1
    Not16(in[0..15] = true, out = zero16);
    Add16(a = zero16, b[1..15] = false, b[0] = true, out = one16);


    Mux16(a = in, b = zero16, sel = reset, out = inAfterReset);

    Or(a = reset, b = load, out = resetOrLoad);


    Add16(a = outTemp, b = one16, out = outInc);
    Mux16(a = outTemp, b = outInc, sel = inc, out = outFeedBack);

    Mux16(a = outFeedBack, b = inAfterReset, sel = resetOrLoad , out = feedRegister);

    //Register(in = feedRegister, load = true, out = outDelay);
    //Register(in = outDelay, load = isValChanged, out = outTemp ,out = out);

    Register(in = feedRegister, load = true, out = outTemp ,out = out);


}
