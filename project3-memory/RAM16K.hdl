// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in = true, sel = address[0..1], a = toRam0, b = toRam1, c = toRam2, d = toRam3);

    And(a = toRam0, b = load, out = isLoad0);
    And(a = toRam1, b = load, out = isLoad1);
    And(a = toRam2, b = load, out = isLoad2);
    And(a = toRam3, b = load, out = isLoad3);

    RAM4K(in = in, load = isLoad0, address = address[2..13], out = outRam0);
    RAM4K(in = in, load = isLoad1, address = address[2..13], out = outRam1);
    RAM4K(in = in, load = isLoad2, address = address[2..13], out = outRam2);
    RAM4K(in = in, load = isLoad3, address = address[2..13], out = outRam3);

    Mux4Way16(a = outRam0, b = outRam1, c = outRam2, d = outRam3, sel = address[0..1], out = out );
}